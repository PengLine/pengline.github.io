<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>docker-compose 安装脚本大集绵</title>
      <link href="/2025/08/27/docker-compose%20%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC%E9%9B%86%E7%BB%B5/"/>
      <url>/2025/08/27/docker-compose%20%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC%E9%9B%86%E7%BB%B5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>包含单机版或集群部署，相关参数可自行调整</p></blockquote><h1>nacos</h1><p>单机版</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nacos:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nacos/nacos-server:v2.5.1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8848:8848&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9848:9848&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9849:9849&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MODE=standalone</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NACOS_AUTH_ENABLE=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PREFER_HOST_MODE=hostname</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MODE=standalone</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NACOS_AUTH_IDENTITY_KEY=nacos</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NACOS_AUTH_IDENTITY_VALUE=nacos</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NACOS_AUTH_TOKEN=VGhpc0lzTXlDdXN0b21TZWNyZXRLZXkwMTIzNDU2Nzg=</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">JVM_XMX=1g</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">JVM_XMS=1g</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./logs:/data/nacos/logs</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data/nacos/data</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure><h1>rocketmq</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">namesrv:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">apache/rocketmq:5.3.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">rmqnamesrv</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9876</span><span class="string">:9876</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rocketmq</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">sh</span> <span class="string">mqnamesrv</span></span><br><span class="line">  <span class="attr">broker:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">apache/rocketmq:5.3.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">rmqbroker</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">10909</span><span class="string">:10909</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">10911</span><span class="string">:10911</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">10912</span><span class="string">:10912</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NAMESRV_ADDR=rmqnamesrv:9876</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">namesrv</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rocketmq</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">sh</span> <span class="string">mqbroker</span></span><br><span class="line">  <span class="attr">proxy:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">apache/rocketmq:5.3.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">rmqproxy</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rocketmq</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">broker</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">namesrv</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8081</span><span class="string">:8081</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8082</span><span class="string">:8082</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NAMESRV_ADDR=rmqnamesrv:9876</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">sh</span> <span class="string">mqproxy</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">rocketmq:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><h1>kafka</h1><p>单机版（KRaft模式）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.8&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">kafka:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">confluentinc/cp-kafka:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">kafka</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9092:9092&quot;</span>      <span class="comment"># 容器间通信端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;19092:19092&quot;</span>    <span class="comment"># 宿主机访问端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9093:9093&quot;</span>      <span class="comment"># Controller端口</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">volume</span></span><br><span class="line">        <span class="attr">source:</span> <span class="string">kafka_standalone_data</span></span><br><span class="line">        <span class="attr">target:</span> <span class="string">/data/kafka</span></span><br><span class="line">        <span class="attr">read_only:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="comment"># KRaft模式必需配置</span></span><br><span class="line">      <span class="attr">CLUSTER_ID:</span> <span class="string">mk-0kz5wGoTQ6eN6vDPN2eX2A</span></span><br><span class="line">      <span class="attr">KAFKA_PROCESS_ROLES:</span> <span class="string">broker,controller</span></span><br><span class="line">      <span class="attr">KAFKA_NODE_ID:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">KAFKA_CONTROLLER_QUORUM_VOTERS:</span> <span class="number">1</span><span class="string">@localhost:9093</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment"># 关键：配置多个监听器支持不同访问场景</span></span><br><span class="line">      <span class="comment"># 在Docker容器中，使用INTERNAL监听器：kafka:19092</span></span><br><span class="line">      <span class="comment"># 在宿主机中，使用EXTERNAL监听器端口：localhost:9092</span></span><br><span class="line">      <span class="attr">KAFKA_LISTENERS:</span> <span class="string">INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093</span></span><br><span class="line">      <span class="attr">KAFKA_ADVERTISED_LISTENERS:</span> <span class="string">INTERNAL://kafka:19092,EXTERNAL://localhost:9092</span></span><br><span class="line">      <span class="attr">KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:</span> <span class="string">INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT</span></span><br><span class="line">      <span class="attr">KAFKA_INTER_BROKER_LISTENER_NAME:</span> <span class="string">INTERNAL</span></span><br><span class="line">      <span class="attr">KAFKA_CONTROLLER_LISTENER_NAMES:</span> <span class="string">CONTROLLER</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment"># 存储配置</span></span><br><span class="line">      <span class="attr">KAFKA_LOG_DIRS:</span> <span class="string">/tmp/kraft-combined-logs</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment"># 其他配置</span></span><br><span class="line">      <span class="attr">KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">KAFKA_TRANSACTION_STATE_LOG_MIN_ISR:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">KAFKA_AUTO_CREATE_TOPICS_ENABLE:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">KAFKA_NUM_PARTITIONS:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">KAFKA_DEFAULT_REPLICATION_FACTOR:</span> <span class="number">1</span></span><br><span class="line">      <span class="comment"># 用来进行选举的Controller服务器，如果有多个Controller则都需要写上，这里本机</span></span><br><span class="line">      <span class="attr">KAFKA_CFG_CONTROLLER_QUORUM_VOTERS:</span> <span class="number">1</span><span class="string">@127.0.0.1:9094</span></span><br><span class="line">      <span class="attr">ALLOW_PLAINTEXT_LISTENER:</span> <span class="literal">yes</span></span><br><span class="line">      <span class="comment"># 开启JMX监控</span></span><br><span class="line">      <span class="attr">JMX_PORT:</span> <span class="number">9998</span></span><br><span class="line">      <span class="attr">KAFKA_JMX_OPTS:</span> <span class="string">-Dcom.sun.management.jmxremote</span> <span class="string">-Dcom.sun.management.jmxremote.authenticate=false</span> <span class="string">-Dcom.sun.management.jmxremote.ssl=false</span> <span class="string">-Djava.rmi.server.hostname=kafka</span> <span class="string">-Dcom.sun.management.jmxremote.rmi.port=9998</span></span><br><span class="line">      </span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> [<span class="string">&quot;CMD-SHELL&quot;</span>, <span class="string">&quot;kafka-broker-api-versions --bootstrap-server localhost:9092&quot;</span>]</span><br><span class="line">      <span class="attr">interval:</span> <span class="string">30s</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="string">10s</span></span><br><span class="line">      <span class="attr">retries:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">kafka-network</span>     </span><br><span class="line">      </span><br><span class="line">  <span class="attr">kafka-ui:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">kafka-ui</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">provectuslabs/kafka-ui:latest</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="comment"># 访问UI： http://localhost:9090/kafkaui/auth</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9090:8080&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">kafka</span></span><br><span class="line">     <span class="comment"># kafka:</span></span><br><span class="line">     <span class="comment">#   condition: service_healthy</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">KAFKA_CLUSTERS_0_NAME:</span> <span class="string">kafka-stand-alone</span></span><br><span class="line">      <span class="attr">KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS:</span> <span class="string">kafka:19092</span></span><br><span class="line">      <span class="attr">KAFKA_CLUSTERS_0_READONLY:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">KAFKA_CLUSTERS_0_METRICS_PORT:</span> <span class="number">9998</span></span><br><span class="line">      <span class="attr">SERVER_SERVLET_CONTEXT_PATH:</span> <span class="string">/kafkaui</span></span><br><span class="line">      <span class="attr">AUTH_TYPE:</span> <span class="string">disabled</span>  <span class="comment"># 或者设置为 : &quot;LOGIN_FORM&quot;</span></span><br><span class="line">      <span class="attr">SPRING_SECURITY_USER_NAME:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">SPRING_SECURITY_USER_PASSWORD:</span> <span class="number">123456</span></span><br><span class="line">      <span class="attr">DYNAMIC_CONFIG_ENABLED:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">kafka-network</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">      </span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">kafka_standalone_data:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">local</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">kafka-network:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>skywalking</h1><p>skywalking 包含的所有组件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">elasticsearch:7.14.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">elasticsearch</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9200</span><span class="string">:9200</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;TAKE_FILE_OWNERSHIP=true&quot;</span> <span class="comment">#volumes 挂载权限 如果不想要挂载es文件改配置可以删除</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;discovery.type=single-node&quot;</span> <span class="comment">#单机模式启动</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;TZ=Asia/Shanghai&quot;</span> <span class="comment"># 设置时区</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span> <span class="comment"># 设置jvm内存大小</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./elasticsearch/logs:/usr/share/elasticsearch/logs</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./elasticsearch/data:/usr/share/elasticsearch/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./elasticsearch/conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">memlock:</span></span><br><span class="line">        <span class="attr">soft:</span> <span class="number">-1</span></span><br><span class="line">        <span class="attr">hard:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">skywalking-oap-server:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">apache/skywalking-oap-server:8.9.1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">skywalking-oap-server</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elasticsearch</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elasticsearch</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">11800</span><span class="string">:11800</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">12800</span><span class="string">:12800</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SW_STORAGE:</span> <span class="string">elasticsearch</span>  <span class="comment"># 指定ES版本</span></span><br><span class="line">      <span class="attr">SW_STORAGE_ES_CLUSTER_NODES:</span> <span class="string">elasticsearch:9200</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">./oap/conf/alarm-settings.yml:/skywalking/config/alarm-settings.yml</span></span><br><span class="line">  <span class="attr">skywalking-ui:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">apache/skywalking-ui:8.9.1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">skywalking-ui</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">skywalking-oap-server</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">skywalking-oap-server</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:8080</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SW_OAP_ADDRESS:</span> <span class="string">http://skywalking-oap-server:12800</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure><h1>prometheus</h1><p>prometheus 包含的所有组件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">net-prometheus:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="comment"># 核心组件   </span></span><br><span class="line">  <span class="attr">prometheus:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/prometheus</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">prometheus</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="literal">no</span>     <span class="comment"># always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9090:9090&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus/conf:/etc/prometheus</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus/data/prometheus_db:/prometheus</span> </span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;--config.file=/etc/prometheus/prometheus.yml&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;--storage.tsdb.path=/prometheus&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;--web.console.libraries=/usr/share/prometheus/console_libraries&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;--web.console.templates=/usr/share/prometheus/consoles&#x27;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">net-prometheus</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前端展示</span></span><br><span class="line">  <span class="attr">grafana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/grafana</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">grafana</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="literal">no</span>     <span class="comment"># always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3000:3000&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">     <span class="comment"># - ./prometheus/conf/grafana:/etc/grafana</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus/data/grafana_data:/var/lib/grafana</span></span><br><span class="line">    <span class="attr">depends_on:</span>  </span><br><span class="line">      <span class="bullet">-</span> <span class="string">prometheus</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">net-prometheus</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">pushgateway:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/pushgateway</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">pushgateway</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="literal">no</span>     <span class="comment"># always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9091:9091&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus/data/pushgateway_data:/var/lib/pushgateway</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">net-prometheus</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 告警组件      </span></span><br><span class="line">  <span class="attr">alertmanager:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/alertmanager</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">alertmanager</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">alertmanager</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="literal">no</span>     <span class="comment"># always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9093:9093&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus/data/alertmanager_data:/var/lib/alertmanager</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">net-prometheus</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line"><span class="comment"># 节点监控</span></span><br><span class="line">  <span class="attr">node_exporter:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/node-exporter</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">node_exporter</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;./prometheus:/host:ro,rslave&#x27;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9100</span><span class="string">:9100</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;--path.rootfs=/host&#x27;</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">org.label-schema.group:</span> <span class="string">&quot;monitoring&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="literal">no</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">net-prometheus</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 容器监控</span></span><br><span class="line">  <span class="attr">cadvisor:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">google/cadvisor:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">cadvisor</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">cadvisor</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="literal">no</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus/:/rootfs:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus/var/run:/var/run:rw</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus/sys:/sys:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus/var/lib/docker/:/var/lib/docker:ro</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;8080:8080&#x27;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">net-prometheus</span></span><br></pre></td></tr></table></figure><h2 id="prometheus-yml">prometheus.yml</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># my global config</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span>     <span class="string">15s</span> <span class="comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">15s</span> <span class="comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span></span><br><span class="line">  <span class="comment"># scrape_timeout is set to the global default (10s).</span></span><br><span class="line">  <span class="attr">external_labels:</span></span><br><span class="line">    <span class="attr">monitor:</span> <span class="string">&#x27;dashboard&#x27;</span></span><br><span class="line"></span><br><span class="line">      </span><br><span class="line"><span class="comment"># Alertmanager configuration</span></span><br><span class="line"><span class="attr">alerting:</span></span><br><span class="line">  <span class="attr">alert_relabel_configs:</span> <span class="comment"># 动态修改 alert 属性的规则配置。</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">dc</span>] </span><br><span class="line">      <span class="attr">regex:</span> <span class="string">(.+)\d+</span></span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">dc1</span></span><br><span class="line">  <span class="attr">alertmanagers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;192.168.1.115:9093&#x27;</span>]</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line"><span class="comment"># Load rules once and periodically evaluate them according to the global &#x27;evaluation_interval&#x27;.</span></span><br><span class="line"><span class="attr">rule_files:</span></span><br><span class="line">  <span class="comment"># - &quot;first_rules.yml&quot;</span></span><br><span class="line">  <span class="comment"># - &quot;second_rules.yml&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A scrape configuration containing exactly one endpoint to scrape:</span></span><br><span class="line"><span class="comment"># Here it&#x27;s Prometheus itself.</span></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;prometheus&#x27;</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;prometheus:9090&#x27;</span>]</span><br><span class="line">      </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;node-exporter&#x27;</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="comment"># 需要修改 node-exporter service, 不能用localhost 指的是容器内部</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;192.168.1.115:9100&#x27;</span>,<span class="string">&#x27;192.168.1.115:9091&#x27;</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CICD </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> docker-compose </tag>
            
            <tag> kafka </tag>
            
            <tag> rocketmq </tag>
            
            <tag> skywalking、nacos、prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDD 领域模型在订单系统中的应用案例</title>
      <link href="/2025/08/27/DDD%20%E9%A2%86%E5%9F%9F%E6%A8%A1%E5%9E%8B%E5%9C%A8%E7%94%B5%E5%95%86%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B/"/>
      <url>/2025/08/27/DDD%20%E9%A2%86%E5%9F%9F%E6%A8%A1%E5%9E%8B%E5%9C%A8%E7%94%B5%E5%95%86%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h1>DDD 领域模型</h1><p>领域驱动设计（Domain-driven design）是一种通过将实现连接到持续进化的模型来满足复杂需求的软件开发方法。</p><p><strong>DDD 核心思想是通过领域驱动设计方法定义领域模型，从而确定业务和应用边界，保证业务模型与代码模型的一致性</strong>。</p><blockquote><p>领域驱动设计是一种由<strong>域模型</strong>来驱动着系统设计的思想。</p><ul class="lvl-1"><li class="lvl-2">一种解决复杂系统的建模与分析方法</li><li class="lvl-2">将业务概念和规则转为对象和对象的属性行为</li><li class="lvl-2">通过封装、继承和多态降低业务复杂性</li><li class="lvl-2"><strong>不是数据库表结构的映射</strong>，而是对业务逻辑、规则、流程的建模。</li><li class="lvl-2">包含实体、值对象、聚合、领域服务、领域事件等元素。</li></ul><p>举个例子：在一个电商系统中，“订单”不是一个简单的 <code>Order</code> 表，而是一个包含下单、支付、取消、发货等行为和状态流转逻辑的复杂对象。</p></blockquote><h2 id="五层架构">五层架构</h2><p>原则：每层只能与位于其下方的层发生耦合。</p><p>分层架构可以简单分为两种，即严格分层架构和松散分层架构。在<strong>严格分层架构</strong>中，某层只能与位于其直接下方的层发生耦合，而在<strong>松散分层架构</strong>中，则允许某层与它的任意下方层发生耦合。</p><img src="/imgs/at4uaznghdxgm_a3d40698d6354ed5af6fc331081774d3.webp" alt="img" style="zoom:33%;" /><blockquote><ul class="lvl-1"><li class="lvl-2"><p>降低了系统的性能。因为增加了中间层，可以通过缓存机制来改善。</p></li><li class="lvl-2"><p>可能会导致级联的修改。这种修改尤其体现在自上而下的方向，可以通过依赖倒置来改善。</p></li></ul></blockquote><ul class="lvl-0"><li class="lvl-2"><p><strong>领域层</strong>domain（核心业务层）</p><ul class="lvl-2"><li class="lvl-4"><strong>领域对象</strong>：实体对象、值对象、聚合、聚合根 （充血模型：业务方法在实体对象里，负责维护实体自身的生命周期和状态）</li><li class="lvl-4"><strong>领域服务</strong>：接口服务，业务的具体实现（围绕实体）：商品服务、电子围栏、订单服务、运单服务、</li><li class="lvl-4"><strong>领域仓储</strong>：持久化的细节隐藏，减少领域层对基础设施层的依赖（需要使用到基础设施层，包括DB、Feign调用等）</li></ul></li><li class="lvl-2"><p><strong>防腐层</strong>（外部API）</p><ul class="lvl-2"><li class="lvl-4">三方API：隔离业务，防止污染业务代码，可通过代理或适配器实现转换</li></ul></li><li class="lvl-2"><p><strong>应用层（业务逻辑层）</strong></p><ul class="lvl-2"><li class="lvl-4">应用服务：调用和组合领域层的服务，不包含任何业务逻辑（简单除外），只是组合模型业务（类似模块化）</li><li class="lvl-4">数据转换：接口参数DTO的简单校验，以及DTO和实体值对象的数据转换</li><li class="lvl-4">事件订阅：管理多个消息主体</li><li class="lvl-4">消息订阅：多个微服务间协作解耦的异步实现方式</li></ul></li><li class="lvl-2"><p><strong>基础设施层</strong></p><ul class="lvl-2"><li class="lvl-4">数据库、缓存、消息队列、配置</li><li class="lvl-4">对外隐藏技术实现细节，提供粗粒度的数据输出服务</li><li class="lvl-4">数据库操作：领域层传递的是数据对象，在这里可以按数据表的实现方式进行拆分实现</li></ul></li><li class="lvl-2"><p><strong>用户接口层（表现层）</strong></p><ul class="lvl-2"><li class="lvl-4">面向服务间API调用，WEB接口</li><li class="lvl-4">身份认证和权限验证</li><li class="lvl-4">限流和熔断服务</li><li class="lvl-4">VO和DTO数据转换</li></ul></li></ul><blockquote><p>简单查询不涉及业务，是可以直接从应用层穿透到PO查询，不需要经过domain层</p><p>DTO是不能存在于domain层的，DDD设计不认为DTO是业务对象，entity才是</p></blockquote><h1>订单建模示例</h1><p><a href="https://github.com/haeng2015/ddd-order-demo"><strong>完整项目</strong></a></p><ol><li class="lvl-3"><p><strong>DDD 分层模型</strong>：</p></li></ol><blockquote><p><strong>用户接口层（Interface / API 层）</strong>：提供 REST 接口，接收外部请求。</p><p><strong>应用层（Application 层）</strong>：编排领域服务，处理用例逻辑，如“创建订单”。</p><p><strong>领域层（Domain 层）</strong>：包含核心业务逻辑，如 Order 聚合根、领域事件、状态机、仓储接口等。</p><p><strong>基础设施层（Infrastructure 层）</strong>：实现仓储接口、防腐层、外部服务调用、事件发布等。</p></blockquote><ol start="2"><li class="lvl-3"><p><strong>防腐层（Anti-Corruption Layer, ACL）</strong>：</p></li></ol><blockquote><p>用于与外部系统（如库存服务）交互，避免领域模型被外部污染。</p><p>在基础设施层实现，通过 ACL 将外部模型转换为内部领域模型。</p></blockquote><ol start="3"><li class="lvl-3"><p><strong>事件与状态机</strong>：</p></li></ol><blockquote><p>使用领域事件（如 OrderCreatedEvent, OrderPaidEvent）表达领域内发生的重要事情。</p><p>使用状态机（如 OrderStateMachine）管理订单状态的合法流转（如：待支付 -&gt; 已支付 -&gt; 已发货 / 已取消）。</p></blockquote><p><strong>代码结构展示</strong></p><blockquote><p>├── src/<br>│   └── main/<br>│       ├── java/<br>│       │   └── com/example/order/<br>│       │       ├── OrderApplication.java<br>│       │       │<br>│       │       ├── application/                 # 应用层<br>│       │       │   ├── service/<br>│       │       │   │   └── OrderService.java<br>│       │       │   └── dto/<br>│       │       │       └── OrderDTO.java<br>│       │       │<br>│       │       ├── domain/                      # 领域层（核心）<br>│       │       │   ├── model/                   # 聚合根、实体、值对象<br>│       │       │   │   ├── Order.java<br>│       │       │   │   ├── OrderItem.java<br>│       │       │   │   └── OrderStatus.java<br>│       │       │   │<br>│       │       │   ├── event/                   # 领域事件<br>│       │       │   │   ├── OrderCreatedEvent.java<br>│       │       │   │   ├── OrderPaidEvent.java<br>│       │       │   │   ├── OrderShippedEvent.java<br>│       │       │   │   └── OrderCancelledEvent.java<br>│       │       │   │<br>│       │       │   ├── repository/              # 领域仓库接口<br>│       │       │   │   └── OrderRepository.java<br>│       │       │   │<br>│       │       │   ├── service/                 # 领域服务<br>│       │       │   │   └── OrderDomainService.java<br>│       │       │   │<br>│       │       │   └── statemachine/            # 状态机配置<br>│       │       │       ├── OrderState.java<br>│       │       │       ├── OrderEvent.java<br>│       │       │       └── OrderStateMachineConfig.java<br>│       │       │<br>│       │       ├── infrastructure/              # 基础设施层<br>│       │       │   ├── persistence/             # 持久化实现<br>│       │       │   │   ├── jpa/<br>│       │       │   │   │   ├── OrderEntity.java<br>│       │       │   │   │   └── OrderRepository.java<br>│       │       │   │   └── mapper/<br>│       │       │   │       └── OrderMapper.java<br>│       │       │   │<br>│       │       │   ├── messaging/               # 消息发布（事件）<br>│       │       │   │   └── KafkaEventPublisher.java<br>│       │       │   │<br>│       │       │   └── integration/             # 外部系统集成（含防腐层）<br>│       │       │       ├── inventory/<br>│       │       │       │   ├── InventoryClient.java<br>│       │       │       │   ├── InventoryResponse.java<br>│       │       │       │   └── acl/             # 防腐层<br>│       │       │       │       ├── InventoryServiceAcl.java<br>│       │       │       │       └── InventoryRequestDTO.java<br>│       │       │       └── payment/<br>│       │       │           ├── PaymentClient.java<br>│       │       │           └── acl/<br>│       │       │               └── PaymentServiceAcl.java<br>│       │       │<br>│       │       └── interfaces/                  # 接口层（Controller）<br>│       │           └── web/<br>│       │               └── OrderController.java<br>│       │<br>│       └── resources/<br>│           ├── application.yml<br>│           ├── statemachine/                    # 状态机配置</p></blockquote><h2 id="订单管理建模">订单管理建模</h2><p>核心对象：</p><blockquote><ul class="lvl-1"><li class="lvl-2"><p>聚合根对象：<code>Order</code>（订单）</p></li><li class="lvl-2"><p>值对象：订单项（<code>OrderItem</code>）、地址（<code>Address</code>）、金额（<code>Money</code>）等</p></li><li class="lvl-2"><p>一致性边界：一次下单操作必须保证所有订单项和状态一致</p></li></ul></blockquote><h3 id="实体与值对象定义">实体与值对象定义</h3><ul class="lvl-0"><li class="lvl-2"><p><strong>值对象</strong>：<code>Money</code>（金额）</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Money</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal amount;</span><br><span class="line">    <span class="keyword">private</span> String currency;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Money</span><span class="params">(BigDecimal amount, String currency)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (amount.compareTo(BigDecimal.ZERO) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessRuleViolation</span>(<span class="string">&quot;金额不能为负&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.amount = amount;</span><br><span class="line">        <span class="built_in">this</span>.currency = currency;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Money <span class="title function_">add</span><span class="params">(Money other)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">this</span>.currency.equals(other.currency)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessRuleViolation</span>(<span class="string">&quot;货币不一致&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Money</span>(<span class="built_in">this</span>.amount.add(other.amount), <span class="built_in">this</span>.currency);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// equals, hashCode 基于 amount 和 currency</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><strong>实体</strong>：<code>OrderItem</code>（订单项）</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderItem</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String productId;</span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line">    <span class="keyword">private</span> Money unitPrice;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> quantity;</span><br><span class="line">    <span class="keyword">private</span> Money totalPrice;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OrderItem</span><span class="params">(String productId, String productName, Money unitPrice, <span class="type">int</span> quantity)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.productId = productId;</span><br><span class="line">        <span class="built_in">this</span>.productName = productName;</span><br><span class="line">        <span class="built_in">this</span>.unitPrice = unitPrice;</span><br><span class="line">        <span class="built_in">this</span>.quantity = quantity;</span><br><span class="line">        <span class="built_in">this</span>.totalPrice = unitPrice.multiply(quantity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可提供 increaseQuantity(), changePrice() 等方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><strong>聚合根</strong>：<code>Order</code>（订单）</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Order</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String orderId;</span><br><span class="line">    <span class="keyword">private</span> String customerId;</span><br><span class="line">    <span class="keyword">private</span> List&lt;OrderItem&gt; items = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> Address shippingAddress;</span><br><span class="line">    <span class="keyword">private</span> Money totalAmount;</span><br><span class="line">    <span class="keyword">private</span> OrderStatus status;</span><br><span class="line">    <span class="keyword">private</span> DateTime createdAt;</span><br><span class="line">    <span class="keyword">private</span> List&lt;DomainEvent&gt; events = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有构造，强制使用工厂创建</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Order</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 下单：创建订单</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Order <span class="title function_">createFromCart</span><span class="params">(</span></span><br><span class="line"><span class="params">            String orderId,</span></span><br><span class="line"><span class="params">            String customerId,</span></span><br><span class="line"><span class="params">            List&lt;CartItem&gt; cartItems,</span></span><br><span class="line"><span class="params">            Address address)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Order</span>();</span><br><span class="line">        order.orderId = orderId;</span><br><span class="line">        order.customerId = customerId;</span><br><span class="line">        order.shippingAddress = address;</span><br><span class="line">        order.createdAt = LocalDateTime.now();</span><br><span class="line">        order.status = OrderStatus.PENDING;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (CartItem item : cartItems) &#123;</span><br><span class="line">            <span class="type">ProductPrice</span> <span class="variable">price</span> <span class="operator">=</span> ProductService.getCurrentPrice(item.getProductId());</span><br><span class="line">            order.addItem(<span class="keyword">new</span> <span class="title class_">OrderItem</span>(</span><br><span class="line">                item.getProductId(),</span><br><span class="line">                item.getProductName(),</span><br><span class="line">                price.getAmount(),</span><br><span class="line">                item.getQuantity()</span><br><span class="line">            ));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        order.calculateTotal();</span><br><span class="line">        <span class="keyword">return</span> order;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加订单项（业务规则：仅在 PENDING 状态下允许）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addItem</span><span class="params">(OrderItem item)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (status != OrderStatus.PENDING) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessRuleViolation</span>(<span class="string">&quot;订单已锁定，无法添加商品&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        items.add(item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算总金额</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">calculateTotal</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.totalAmount = items.stream()</span><br><span class="line">            .map(OrderItem::getTotalPrice)</span><br><span class="line">            .reduce(Money.ZERO, Money::add);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支付成功：确认订单</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">confirmPayment</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (status != OrderStatus.PENDING) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessRuleViolation</span>(<span class="string">&quot;订单状态异常，无法确认支付&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.status = OrderStatus.PAID;</span><br><span class="line">        <span class="comment">// 发布领域事件</span></span><br><span class="line">        DomainEventPublisher.publish(<span class="keyword">new</span> <span class="title class_">OrderPaidEvent</span>(orderId, totalAmount));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取消订单</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cancel</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (status == OrderStatus.SHIPPED) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessRuleViolation</span>(<span class="string">&quot;已发货订单不能取消&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (status == OrderStatus.CANCELLED) &#123;</span><br><span class="line">            <span class="keyword">return</span>; <span class="comment">// 幂等处理</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.status = OrderStatus.CANCELLED;</span><br><span class="line">        DomainEventPublisher.publish(<span class="keyword">new</span> <span class="title class_">OrderCancelledEvent</span>(orderId, customerId));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发货</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">ship</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (status != OrderStatus.PAID) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessRuleViolation</span>(<span class="string">&quot;订单未支付，不能发货&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.status = OrderStatus.SHIPPED;</span><br><span class="line">        DomainEventPublisher.publish(<span class="keyword">new</span> <span class="title class_">OrderShippedEvent</span>(orderId));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addEvent</span><span class="params">(DomainEvent event)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.events.add(event);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// getter 方法省略...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><strong>枚举及其他</strong>：<code>OrderStatus</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">OrderStatus</span> &#123;</span><br><span class="line">    PENDING,    <span class="comment">// 待支付</span></span><br><span class="line">    PAID,       <span class="comment">// 已支付</span></span><br><span class="line">    SHIPPED,    <span class="comment">// 已发货</span></span><br><span class="line">    CANCELLED   <span class="comment">// 已取消</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="领域事件（Domain-Events）">领域事件（Domain Events）</h3><p>领域事件可通过事件总线异步通知库存、物流、用户积分等系统。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 订单已支付</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderPaidEvent</span> <span class="keyword">implements</span> <span class="title class_">DomainEvent</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String orderId;</span><br><span class="line">    <span class="keyword">private</span> Money amount;</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime occurredAt;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OrderPaidEvent</span><span class="params">(String orderId, Money amount)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.orderId = orderId;</span><br><span class="line">        <span class="built_in">this</span>.amount = amount;</span><br><span class="line">        <span class="built_in">this</span>.occurredAt = LocalDateTime.now();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 订单已取消</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderCancelledEvent</span> <span class="keyword">implements</span> <span class="title class_">DomainEvent</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String orderId;</span><br><span class="line">    <span class="keyword">private</span> String customerId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OrderCancelledEvent</span><span class="params">(String orderId, String customerId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.orderId = orderId;</span><br><span class="line">        <span class="built_in">this</span>.customerId = customerId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 订单已发货</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderShippedEvent</span> <span class="keyword">implements</span> <span class="title class_">DomainEvent</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String orderId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OrderShippedEvent</span><span class="params">(String orderId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.orderId = orderId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="领域服务：OrderFulfillmentService">领域服务：<code>OrderFulfillmentService</code></h3><p>处理跨聚合或跨上下文的复杂逻辑：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderFulfillmentService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> InventoryService inventoryService;</span><br><span class="line">    <span class="keyword">private</span> PaymentQueryService paymentQueryService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleOrderPaymentConfirmed</span><span class="params">(String orderId)</span> &#123;</span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> orderRepository.findById(orderId);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1. 检查支付是否真实完成</span></span><br><span class="line">        <span class="keyword">if</span> (!paymentQueryService.isPaymentValid(orderId)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessRuleViolation</span>(<span class="string">&quot;支付未验证通过&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 锁定库存（调用库存上下文）</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">locked</span> <span class="operator">=</span> inventoryService.reserveInventory(order.getItems());</span><br><span class="line">        <span class="keyword">if</span> (!locked) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessRuleViolation</span>(<span class="string">&quot;库存不足&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 确认订单</span></span><br><span class="line">        order.confirmPayment();</span><br><span class="line">        orderRepository.save(order); <span class="comment">// 触发事件发布</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="仓储接口（Repository）">仓储接口（Repository）</h3><p>定义在领域层，实现放在基础设施层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 领域层接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderRepository</span> &#123;</span><br><span class="line">    Order <span class="title function_">findById</span><span class="params">(String orderId)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Order order)</span>;</span><br><span class="line">    List&lt;Order&gt; <span class="title function_">findByCustomer</span><span class="params">(String customerId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="工厂封装（Factory）">工厂封装（Factory）</h3><p>封装复杂创建逻辑：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderFactory</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Order <span class="title function_">createFromCart</span><span class="params">(</span></span><br><span class="line"><span class="params">            String orderId,</span></span><br><span class="line"><span class="params">            Customer customer,</span></span><br><span class="line"><span class="params">            ShoppingCart cart,</span></span><br><span class="line"><span class="params">            Address address)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 校验用户是否可下单</span></span><br><span class="line">        <span class="keyword">if</span> (!customer.isActive()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessRuleViolation</span>(<span class="string">&quot;用户被禁用&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 校验购物车非空</span></span><br><span class="line">        <span class="keyword">if</span> (cart.getItems().isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessRuleViolation</span>(<span class="string">&quot;购物车为空&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Order.createFromCart(orderId, customer.getId(), cart.getItems(), address);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="事件驱动的订单状态机设计">事件驱动的订单状态机设计</h2><blockquote><ul class="lvl-1"><li class="lvl-2"><p>订单的状态流转不再由“硬编码 if-else”控制，而是通过 <strong>监听领域事件</strong> 触发状态变更。</p></li><li class="lvl-2"><p>使用 <strong>状态机（State Machine）</strong> 模型来管理 <code>OrderStatus</code> 的合法转换。</p></li><li class="lvl-2"><p>所有状态变更由 <strong>领域事件驱动</strong>，保证逻辑集中、可追溯、可扩展。</p></li></ul></blockquote><table><thead><tr><th>当前状态 → 新状态</th><th>触发事件</th><th>是否允许</th></tr></thead><tbody><tr><td>PENDING → PAID</td><td>OrderPaidEvent</td><td>✅ 是</td></tr><tr><td>PENDING → CANCELLED</td><td>OrderCancelledEvent</td><td>✅ 是</td></tr><tr><td>PAID → SHIPPED</td><td>OrderShippedEvent</td><td>✅ 是</td></tr><tr><td>PAID → CANCELLED</td><td>OrderRefundedEvent</td><td>✅ 是（退款后取消）</td></tr><tr><td>SHIPPED → CANCELLED</td><td>❌</td><td>❌ 否</td></tr><tr><td>任意 → PENDING</td><td>❌</td><td>❌ 不允许回退</td></tr></tbody></table><h3 id="状态机实现">状态机实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderStateMachine</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义合法的状态转移</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;OrderStatus, List&lt;OrderStatus&gt;&gt; transitions = Map.of(</span><br><span class="line">        OrderStatus.PENDING, Arrays.asList(OrderStatus.PAID, OrderStatus.CANCELLED),</span><br><span class="line">        OrderStatus.PAID, Arrays.asList(OrderStatus.SHIPPED, OrderStatus.CANCELLED)</span><br><span class="line">        <span class="comment">// SHIPPED 没有出边 → 不可变更</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canTransition</span><span class="params">(OrderStatus from, OrderStatus to)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (from == <span class="literal">null</span> || to == <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        List&lt;OrderStatus&gt; allowed = transitions.getOrDefault(from, Collections.emptyList());</span><br><span class="line">        <span class="keyword">return</span> allowed.contains(to);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行状态变更（由事件处理器调用）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">applyEvent</span><span class="params">(Order order, DomainEvent event)</span> &#123;</span><br><span class="line">        <span class="type">OrderStatus</span> <span class="variable">newStatus</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (event <span class="keyword">instanceof</span> OrderPaidEvent) &#123;</span><br><span class="line">            newStatus = OrderStatus.PAID;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (event <span class="keyword">instanceof</span> OrderShippedEvent) &#123;</span><br><span class="line">            newStatus = OrderStatus.SHIPPED;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (event <span class="keyword">instanceof</span> OrderCancelledEvent || event <span class="keyword">instanceof</span> OrderRefundedEvent) &#123;</span><br><span class="line">            newStatus = OrderStatus.CANCELLED;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (newStatus != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (canTransition(order.getStatus(), newStatus)) &#123;</span><br><span class="line">                order.setStatusInternal(newStatus); <span class="comment">// 注意：内部私有方法，不暴露给外部，避免外部随意修改状态</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessRuleViolation</span>(</span><br><span class="line">                    <span class="string">&quot;非法状态转移: &quot;</span> + order.getStatus() + <span class="string">&quot; → &quot;</span> + newStatus);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="事件处理器（Event-Handlers）">事件处理器（Event Handlers）</h3><p>使用 Spring 的事件机制或自定义事件总线监听领域事件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderEventHandlers</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> OrderRepository orderRepository;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> OrderStateMachine stateMachine;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">(OrderPaidEvent event)</span> &#123;</span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> orderRepository.findById(event.getOrderId());</span><br><span class="line">        stateMachine.applyEvent(order, event);</span><br><span class="line">        orderRepository.save(order);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">(OrderShippedEvent event)</span> &#123;</span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> orderRepository.findById(event.getOrderId());</span><br><span class="line">        stateMachine.applyEvent(order, event);</span><br><span class="line">        orderRepository.save(order);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">(OrderCancelledEvent event)</span> &#123;</span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> orderRepository.findById(event.getOrderId());</span><br><span class="line">        stateMachine.applyEvent(order, event);</span><br><span class="line">        orderRepository.save(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="支持事件溯源">支持事件溯源</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 伪代码：从事件重建订单</span></span><br><span class="line"><span class="keyword">public</span> Order <span class="title function_">reconstituteFromHistory</span><span class="params">(String orderId, List&lt;DomainEvent&gt; events)</span> &#123;</span><br><span class="line">    <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Order</span>();</span><br><span class="line">    <span class="keyword">for</span> (DomainEvent event : events) &#123;</span><br><span class="line">        event.applyTo(order); <span class="comment">// 每个事件自己知道如何影响订单</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> order;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="防腐层：支付、库存等">防腐层：支付、库存等</h2><p><strong>在限界上下文之间建立翻译与隔离层</strong>，防止外部概念“侵蚀”本领域的纯洁性。 外部系统（如支付系统、库存系统）</p><blockquote><p>外部系统（支付宝）<br>↓ HTTP 回调<br>[ 支付回调 Controller ]<br>↓<br>[ AlipayAclAdapter ] → 验签 + 校验<br>↓<br>[ PaymentEventMapper ] → 映射为 OrderPaidEvent<br>↓<br>[ Domain Event Bus ]<br>├──→ [OrderEventHandlers] → 触发 Order 状态机<br>└──→ [OrderStateMachine]   → 更新订单状态<br>↓<br>[OrderRepository] →  数据持久化</p></blockquote><ol><li class="lvl-3"><h5 id="外部支付回调-DTO（来自支付宝）">外部支付回调 DTO（来自支付宝）</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AlipayCallback</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String tradeNo;</span><br><span class="line">    <span class="keyword">private</span> String outTradeNo; <span class="comment">// 我方订单号</span></span><br><span class="line">    <span class="keyword">private</span> String tradeStatus;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li class="lvl-3"><h5 id="防腐层适配器（ACL-Adapter）">防腐层适配器（ACL Adapter）</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AlipayAclAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> PaymentEventMapper eventMapper;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> DomainEventPublisher eventPublisher;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleCallback</span><span class="params">(AlipayCallback callback)</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 校验签名（安全）</span></span><br><span class="line">        <span class="keyword">if</span> (!verifySignature(callback)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">SecurityException</span>(<span class="string">&quot;非法回调&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 映射为本地下游事件</span></span><br><span class="line">        <span class="type">DomainEvent</span> <span class="variable">domainEvent</span> <span class="operator">=</span> eventMapper.toDomainEvent(callback);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 发布事件，驱动本域逻辑</span></span><br><span class="line">        <span class="keyword">if</span> (domainEvent != <span class="literal">null</span>) &#123;</span><br><span class="line">            eventPublisher.publish(domainEvent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">verifySignature</span><span class="params">(AlipayCallback callback)</span> &#123;</span><br><span class="line">        <span class="comment">// 调用支付宝 SDK 验签</span></span><br><span class="line">        <span class="keyword">return</span> AlipaySignature.rsaCheckV2(...) == <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li class="lvl-3"><h5 id="事件映射器（Mapping-Logic）">事件映射器（Mapping Logic）</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PaymentEventMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DomainEvent <span class="title function_">toDomainEvent</span><span class="params">(AlipayCallback callback)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">orderId</span> <span class="operator">=</span> callback.getOutTradeNo();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (callback.getTradeStatus()) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;TRADE_SUCCESS&quot;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;TRADE_FINISHED&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OrderPaidEvent</span>(orderId, Money.of(<span class="number">999</span>, <span class="string">&quot;CNY&quot;</span>)); <span class="comment">// 可结合查询订单金额</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;TRADE_CLOSED&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OrderRefundedEvent</span>(orderId);</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="应用层：-Service">应用层： Service</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderRepository orderRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PaymentService paymentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DomainEventPublisher eventPublisher;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> OrderId <span class="title function_">createOrder</span><span class="params">(CreateOrderCommand command)</span> &#123;</span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Order</span>(command.getOrderId(), command.getAmount());</span><br><span class="line">        order.create();</span><br><span class="line">        orderRepository.save(order);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发布事件</span></span><br><span class="line">        order.getEvents().forEach(eventPublisher::publish);</span><br><span class="line">        <span class="keyword">return</span> order.getId();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">payOrder</span><span class="params">(PayOrderCommand command)</span> &#123;</span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> orderRepository.findById(command.getOrderId())</span><br><span class="line">            .orElseThrow(() -&gt; <span class="keyword">new</span> <span class="title class_">BusinessException</span>(<span class="string">&quot;Order not found&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 先调用支付</span></span><br><span class="line">        <span class="type">PaymentResult</span> <span class="variable">result</span> <span class="operator">=</span> paymentService.processPayment(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">PaymentRequest</span>(order.getAmount(), command.getCardToken())</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (result.getStatus() == PaymentStatus.SUCCESS) &#123;</span><br><span class="line">            order.pay();</span><br><span class="line">            orderRepository.save(order);</span><br><span class="line">            order.getEvents().forEach(eventPublisher::publish);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(<span class="string">&quot;Payment failed&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口层：Controller">接口层：Controller</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/orders&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;String&gt; <span class="title function_">createOrder</span><span class="params">(<span class="meta">@RequestBody</span> OrderRequestDTO dto)</span> &#123;</span><br><span class="line">        <span class="type">OrderId</span> <span class="variable">id</span> <span class="operator">=</span> orderService.createOrder(<span class="keyword">new</span> <span class="title class_">CreateOrderCommand</span>(dto.getAmount()));</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(id.getValue());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/&#123;orderId&#125;/pay&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;String&gt; <span class="title function_">payOrder</span><span class="params">(<span class="meta">@PathVariable</span> String orderId, <span class="meta">@RequestBody</span> PaymentRequestDTO dto)</span> &#123;</span><br><span class="line">        orderService.payOrder(<span class="keyword">new</span> <span class="title class_">PayOrderCommand</span>(<span class="keyword">new</span> <span class="title class_">OrderId</span>(orderId), dto.getCardToken()));</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(<span class="string">&quot;Paid&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 架构 </category>
          
          <category> DDD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 领域模型 </tag>
            
            <tag> DDD </tag>
            
            <tag> 架构设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis 过期数据删除策略</title>
      <link href="/2025/08/26/Redis%20%E6%95%B0%E6%8D%AE%E8%BF%87%E6%9C%9F%E5%88%A0%E9%99%A4%E7%AD%96%E7%95%A5/"/>
      <url>/2025/08/26/Redis%20%E6%95%B0%E6%8D%AE%E8%BF%87%E6%9C%9F%E5%88%A0%E9%99%A4%E7%AD%96%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<h1>过期清除策略</h1><p>redis针对设置过期时间的key，所使用的清除策略有主动和被动两种方式。</p><h2 id="被动检测">被动检测</h2><p>被动检测，也称惰性删除。</p><p>放任键过期不管，每次从键空间中获取键时，都检查取得的键是否过期，如果过期就删除该键，否则就返回该键值。</p><blockquote><p>被动方式对于那些永远不会再访问的 key 并没有效果。不管怎么，这些 key 都应被过期淘汰，所以 Redis 周期性主动随机检查一部分被设置生存时间的 key，那些已经过期的 key 会被从 key 空间中删除。</p></blockquote><h2 id="主动检测">主动检测</h2><ul class="lvl-0"><li class="lvl-2"><p>定时删除：在设置键过期时间的同时，创建一个定时器 timer。让定时器在键的过期时间来临时，执行对键的删除操作。</p></li><li class="lvl-2"><p>定期删除：每隔100ms就对数据库进行一次随机抽查，删除里面的过期键。至于要删除多少过期键，以及要检查多少个数据库，则由算法决定。比如Redis每秒执行10次下面的操作：</p><blockquote><ol><li class="lvl-3">从带有生存时间的 key 的集合中随机选 20 进行检查。</li><li class="lvl-3">删除所有过期的key。</li><li class="lvl-3">如20里面有超过25%的key过期，立刻继续执行步骤1。</li></ol></blockquote></li></ul><h1>数据淘汰策略</h1><p>Redis 的内存淘汰机制（Eviction Policy）是指当 Redis 的内存使用量达到设定的最大值（通过 <code>maxmemory</code> 配置）时，选择哪些数据被删除以释放空间来存放新数据的策略。</p><blockquote><p>由于redis定期删除是随机抽取检查，不可能扫描清除掉所有过期的key并删除，一些key由于未被请求，惰性删除也未触发。</p><p>同时存在未设置过期时间的key，这样redis的内存占用会越来越高。此时就需要内存淘汰机制。</p></blockquote><h2 id="淘汰算法">淘汰算法</h2><p>Redis 的淘汰算法有3种：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>random</strong>（随机）</p></li><li class="lvl-2"><p><strong>TTL</strong>（将要过期）</p></li><li class="lvl-2"><p><strong>LRU</strong>（最近最少使用）</p></li></ul><h2 id="淘汰策略">淘汰策略</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定 Redis 能使用的最大内存，100MB限制</span></span><br><span class="line"><span class="attr">maxmemory</span> <span class="string">100mb</span></span><br><span class="line"><span class="comment"># 当内存达到限制时，Redis 回收策略（volatile-lru、volatile-ttl、volatile-random、allkeys-lru、allkeys-random、no-enviction）</span></span><br><span class="line"><span class="attr">maxmemory-policy</span> <span class="string">noeviction</span></span><br></pre></td></tr></table></figure><p><strong>Redis  支持6种淘汰策略</strong>:</p><blockquote><ol><li class="lvl-3"><p><strong>noeviction</strong>（默认）：不清除数据，只返回错误，会导致浪费掉更多内存（DEL 命令和其他的少数命令例外）</p></li><li class="lvl-3"><p><strong>allkeys-lru</strong>：从所有的数据集（server.db[i].dict）中挑选最近最少使用的数据淘汰</p></li><li class="lvl-3"><p><strong>allkeys-random</strong>：从所有数据集（server.db[i].dict）中任意选择数据淘汰</p></li><li class="lvl-3"><p><strong>volatile-lru</strong>：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰</p></li><li class="lvl-3"><p><strong>volatile-random</strong>：从已设置过期时间的数据集（server.db[i].expires）中任意选择数据淘汰</p></li><li class="lvl-3"><p><strong>volatile-ttl</strong>：从已设置过期时间的数据集（server.db[i].expires）中挑选将要过期的数据淘汰，ttl值越大越优先被淘汰</p></li></ol></blockquote><p>如果没有设置 <strong>expire</strong> 的key,  那么 <strong>volatile-lru</strong>, <strong>volatile-random</strong> 和 <strong>volatile-ttl</strong> 策略的行为, 和 <strong>noeviction</strong>基本一致。</p><blockquote><p>一般来说:</p><p>​    设置 <code>expire</code> 会消耗额外的内存, 所以使用 <strong>allkeys-lru</strong> 策略, 可以更高效地利用内存 。</p><p>​    如果某个命令导致大量内存占用(一个很大的set), 在一段时间内, 内存的使用量会明显超过 maxmemory 限制。</p></blockquote><h2 id="策略选择建议">策略选择建议</h2><p>策略使用规则：</p><blockquote><ul class="lvl-1"><li class="lvl-2"><p>如果数据呈现幂律分布，也就是一部分数据访问频率高，一部分数据访问频率低，则使用 allkeys-lru。如果分为热数据与冷数据, 推荐使用 allkeys-lru 策略。 如果不确定具体的业务特征, 那么 allkeys-lru 是一个很好的选择。</p></li><li class="lvl-2"><p>如果数据呈现平等分布，也就是所有的数据访问频率都相同，则使用 allkeys-random，即读写所有元素的概率差不多。</p></li></ul></blockquote><table><thead><tr><th style="text-align:left">策略</th><th style="text-align:left">适用场景</th></tr></thead><tbody><tr><td style="text-align:left"><strong><code>allkeys-lru</code></strong></td><td style="text-align:left"><strong>通用场景，最常用</strong>。如果你的数据访问模式大致符合幂律分布（即一部分数据访问频率高，另一部分低），或者你不确定该用什么策略，选这个通常不会错。</td></tr><tr><td style="text-align:left"><strong><code>allkeys-lfu</code></strong></td><td style="text-align:left">你希望数据的访问频率对淘汰决策影响更大时。例如，一个key即使刚被访问过，但如果它历史上只被访问过一两次，而其他key被访问过成百上千次，那么它仍然可能被淘汰。</td></tr><tr><td style="text-align:left"><strong><code>volatile-ttl</code></strong></td><td style="text-align:left">你希望通过设置不同的TTL来主动管理数据的优先级，并且希望Redis优先淘汰那些快要过期的“临时”数据，保留那些TTL很长的核心数据。</td></tr><tr><td style="text-align:left"><strong><code>volatile-lru</code></strong> / <strong><code>volatile-lfu</code></strong></td><td style="text-align:left">你希望将 Redis 既用作缓存（有过期时间），又用作持久存储（无过期时间）。这样能保证永久数据不会被淘汰，只淘汰缓存数据。</td></tr><tr><td style="text-align:left"><strong><code>allkeys-random</code></strong> / <strong><code>volatile-random</code></strong></td><td style="text-align:left">所有数据被访问的概率都差不多，没有明显的热点数据。</td></tr><tr><td style="text-align:left"><strong><code>noeviction</code></strong></td><td style="text-align:left"><strong>不推荐用于缓存场景</strong>。适用于你希望数据永不被删除，并且内存足够或由应用层处理写失败的情况。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> DB </category>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
            <tag> Redis删除数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + Butterfly 动画切换夜间模式</title>
      <link href="/2025/08/25/Hexo+Butterfly%20%E5%88%87%E6%8D%A2%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F/"/>
      <url>/2025/08/25/Hexo+Butterfly%20%E5%88%87%E6%8D%A2%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>注意版本</strong>：框架 <a href="https://hexo.io/">Hexo 7.3.0</a>|主题 <a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly 5.4.3</a></p></blockquote><h1>JS脚本</h1><p>新建js脚本文件： <code>themes\butterfly\source\js\dark_mode.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">switchNightMode</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;body&#x27;</span>).<span class="title function_">insertAdjacentHTML</span>(<span class="string">&#x27;beforeend&#x27;</span>, <span class="string">&#x27;&lt;div class=&quot;Cuteen_DarkSky&quot;&gt;&lt;div class=&quot;Cuteen_DarkPlanet&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span>),</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;body&#x27;</span>).<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;DarkMode&#x27;</span>) ? (<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;body&#x27;</span>).<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;DarkMode&#x27;</span>), <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;isDark&#x27;</span>, <span class="string">&#x27;0&#x27;</span>), <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;modeicon&#x27;</span>).<span class="title function_">setAttribute</span>(<span class="string">&#x27;xlink:href&#x27;</span>, <span class="string">&#x27;#icon-moon&#x27;</span>)) : (<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;body&#x27;</span>).<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;DarkMode&#x27;</span>), <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;isDark&#x27;</span>, <span class="string">&#x27;1&#x27;</span>), <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;modeicon&#x27;</span>).<span class="title function_">setAttribute</span>(<span class="string">&#x27;xlink:href&#x27;</span>, <span class="string">&#x27;#icon-sun&#x27;</span>)),</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;Cuteen_DarkSky&#x27;</span>)[<span class="number">0</span>].<span class="property">style</span>.<span class="property">transition</span> = <span class="string">&#x27;opacity 3s&#x27;</span>;</span><br><span class="line">          <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;Cuteen_DarkSky&#x27;</span>)[<span class="number">0</span>].<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">          <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;Cuteen_DarkSky&#x27;</span>)[<span class="number">0</span>].<span class="title function_">remove</span>();</span><br><span class="line">          &#125;, <span class="number">1e3</span>);</span><br><span class="line">        &#125;, <span class="number">2e3</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="keyword">const</span> nowMode = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-theme&#x27;</span>) === <span class="string">&#x27;dark&#x27;</span> ? <span class="string">&#x27;dark&#x27;</span> : <span class="string">&#x27;light&#x27;</span></span><br><span class="line">  <span class="keyword">if</span> (nowMode === <span class="string">&#x27;light&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 注意此处的版本不同，写法不同</span></span><br><span class="line">    btf.<span class="title function_">activateDarkMode</span>()</span><br><span class="line">    btf.<span class="property">saveToLocal</span>.<span class="title function_">set</span>(<span class="string">&#x27;theme&#x27;</span>, <span class="string">&#x27;dark&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="variable constant_">GLOBAL_CONFIG</span>.<span class="property">Snackbar</span> !== <span class="literal">undefined</span> &amp;&amp; btf.<span class="title function_">snackbarShow</span>(<span class="variable constant_">GLOBAL_CONFIG</span>.<span class="property">Snackbar</span>.<span class="property">day_to_night</span>)</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;modeicon&#x27;</span>).<span class="title function_">setAttribute</span>(<span class="string">&#x27;xlink:href&#x27;</span>, <span class="string">&#x27;#icon-sun&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 注意此处的版本不同，写法不同</span></span><br><span class="line">    btf.<span class="title function_">activateLightMode</span>()</span><br><span class="line">    btf.<span class="property">saveToLocal</span>.<span class="title function_">set</span>(<span class="string">&#x27;theme&#x27;</span>, <span class="string">&#x27;light&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;body&#x27;</span>).<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;DarkMode&#x27;</span>), <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;modeicon&#x27;</span>).<span class="title function_">setAttribute</span>(<span class="string">&#x27;xlink:href&#x27;</span>, <span class="string">&#x27;#icon-moon&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// handle some cases</span></span><br><span class="line">  <span class="keyword">typeof</span> utterancesTheme === <span class="string">&#x27;function&#x27;</span> &amp;&amp; <span class="title function_">utterancesTheme</span>()</span><br><span class="line">  <span class="keyword">typeof</span> <span class="variable constant_">FB</span> === <span class="string">&#x27;object&#x27;</span> &amp;&amp; <span class="variable language_">window</span>.<span class="title function_">loadFBComment</span>()</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">DISQUS</span> &amp;&amp; <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;disqus_thread&#x27;</span>).<span class="property">children</span>.<span class="property">length</span> &amp;&amp; <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="variable language_">window</span>.<span class="title function_">disqusReset</span>(), <span class="number">200</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>CSS渲染</h1><p>新建styl文件：<code>themes\butterfly\source\css\_layout\dark_mode.styl</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.Cuteen_DarkSky</span>,</span><br><span class="line"><span class="selector-class">.Cuteen_DarkSky</span><span class="selector-pseudo">:before</span></span><br><span class="line">  <span class="attribute">content</span> &#x27;&#x27;</span><br><span class="line">  <span class="attribute">position</span> fixed</span><br><span class="line">  <span class="attribute">left</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">right</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">top</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">bottom</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">z-index</span> <span class="number">88888888</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.Cuteen_DarkSky</span></span><br><span class="line">  <span class="attribute">background</span> linear-gradient(<span class="selector-id">#feb8b0</span>, <span class="selector-id">#fef9db</span>)</span><br><span class="line">  &amp;<span class="selector-pseudo">:before</span></span><br><span class="line">    <span class="attribute">transition</span> <span class="number">2s</span> ease <span class="attribute">all</span></span><br><span class="line">    <span class="attribute">opacity</span> <span class="number">0</span></span><br><span class="line">    <span class="attribute">background</span> linear-gradient(<span class="selector-id">#4c3f6d</span>, <span class="selector-id">#6c62bb</span>, <span class="selector-id">#93b1ed</span>)</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.DarkMode</span></span><br><span class="line">  <span class="selector-class">.Cuteen_DarkSky</span></span><br><span class="line">    &amp;<span class="selector-pseudo">:before</span></span><br><span class="line">      <span class="attribute">opacity</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.Cuteen_DarkPlanet</span></span><br><span class="line">  <span class="attribute">z-index</span> <span class="number">99999999</span></span><br><span class="line">  <span class="attribute">position</span> fixed</span><br><span class="line">  <span class="attribute">left</span> -<span class="number">50%</span></span><br><span class="line">  <span class="attribute">top</span> -<span class="number">50%</span></span><br><span class="line">  <span class="attribute">width</span> <span class="number">200%</span></span><br><span class="line">  <span class="attribute">height</span> <span class="number">200%</span></span><br><span class="line">  -webkit-<span class="attribute">animation</span> CuteenPlanetMove <span class="number">2s</span> cubic-bezier(<span class="number">0.7</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="attribute">animation</span> CuteenPlanetMove <span class="number">2s</span> cubic-bezier(<span class="number">0.7</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="attribute">transform-origin</span> center <span class="attribute">bottom</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> CuteenPlanetMove &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> CuteenPlanetMove &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.Cuteen_DarkPlanet</span></span><br><span class="line">  &amp;<span class="selector-pseudo">:after</span></span><br><span class="line">    <span class="attribute">position</span> absolute</span><br><span class="line">    <span class="attribute">left</span> <span class="number">35%</span></span><br><span class="line">    <span class="attribute">top</span> <span class="number">40%</span></span><br><span class="line">    <span class="attribute">width</span> <span class="number">9.375rem</span></span><br><span class="line">    <span class="attribute">height</span> <span class="number">9.375rem</span></span><br><span class="line">    <span class="attribute">border-radius</span> <span class="number">50%</span></span><br><span class="line">    <span class="attribute">content</span> &#x27;&#x27;</span><br><span class="line">    <span class="attribute">background</span> linear-gradient(<span class="selector-id">#fefefe</span>, <span class="selector-id">#fffbe8</span>)</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search</span></span><br><span class="line">  <span class="selector-tag">span</span></span><br><span class="line">    <span class="attribute">display</span> <span class="attribute">none</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menus_item</span></span><br><span class="line">  <span class="selector-tag">a</span></span><br><span class="line">    <span class="attribute">text-decoration</span> <span class="attribute">none</span>!important</span><br><span class="line">//按钮相关，对侧栏按钮做过魔改的可以调整这里的数值</span><br><span class="line"><span class="selector-class">.icon-V</span></span><br><span class="line">  <span class="attribute">padding</span> <span class="number">5px</span></span><br></pre></td></tr></table></figure><h1>模板引擎 pug</h1><p>新建pug文件：<code>themes\butterfly\layout\includes\custom\dark_mode.pug</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">svg(aria-hidden=&#x27;true&#x27;, style=&#x27;position:absolute; overflow:hidden; width:0; height:0&#x27;)</span><br><span class="line">  symbol#icon-sun(viewBox=&#x27;0 0 1024 1024&#x27;)</span><br><span class="line">    path(d=&#x27;M960 512l-128 128v192h-192l-128 128-128-128H192v-192l-128-128 128-128V192h192l128-128 128 128h192v192z&#x27;, fill=&#x27;#FFD878&#x27;, p-id=&#x27;8420&#x27;)</span><br><span class="line">    path(d=&#x27;M736 512a224 224 0 1 0-448 0 224 224 0 1 0 448 0z&#x27;, fill=&#x27;#FFE4A9&#x27;, p-id=&#x27;8421&#x27;)</span><br><span class="line">    path(d=&#x27;M512 109.248L626.752 224H800v173.248L914.752 512 800 626.752V800h-173.248L512 914.752 397.248 800H224v-173.248L109.248 512 224 397.248V224h173.248L512 109.248M512 64l-128 128H192v192l-128 128 128 128v192h192l128 128 128-128h192v-192l128-128-128-128V192h-192l-128-128z&#x27;, fill=&#x27;#4D5152&#x27;, p-id=&#x27;8422&#x27;)</span><br><span class="line">    path(d=&#x27;M512 320c105.888 0 192 86.112 192 192s-86.112 192-192 192-192-86.112-192-192 86.112-192 192-192m0-32a224 224 0 1 0 0 448 224 224 0 0 0 0-448z&#x27;, fill=&#x27;#4D5152&#x27;, p-id=&#x27;8423&#x27;)</span><br><span class="line">  symbol#icon-moon(viewBox=&#x27;0 0 1024 1024&#x27;)</span><br><span class="line">    path(d=&#x27;M611.370667 167.082667a445.013333 445.013333 0 0 1-38.4 161.834666 477.824 477.824 0 0 1-244.736 244.394667 445.141333 445.141333 0 0 1-161.109334 38.058667 85.077333 85.077333 0 0 0-65.066666 135.722666A462.08 462.08 0 1 0 747.093333 102.058667a85.077333 85.077333 0 0 0-135.722666 65.024z&#x27;, fill=&#x27;#FFB531&#x27;, p-id=&#x27;11345&#x27;)</span><br><span class="line">    path(d=&#x27;M329.728 274.133333l35.157333-35.157333a21.333333 21.333333 0 1 0-30.165333-30.165333l-35.157333 35.157333-35.114667-35.157333a21.333333 21.333333 0 0 0-30.165333 30.165333l35.114666 35.157333-35.114666 35.157334a21.333333 21.333333 0 1 0 30.165333 30.165333l35.114667-35.157333 35.157333 35.157333a21.333333 21.333333 0 1 0 30.165333-30.165333z&#x27;, fill=&#x27;#030835&#x27;, p-id=&#x27;11346&#x27;)</span><br></pre></td></tr></table></figure><h1>引入依赖</h1><p>修改文件：<code>themes\butterfly\layout\includes\head.pug</code></p><p>在末尾加入：<code>include ./custom/dark_mode.pug</code></p><h1>触发切换</h1><p>修改文件：<code>themes\butterfly\layout\includes\rightside.pug</code></p><p><strong>修改前</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">when &#x27;darkmode&#x27;</span><br><span class="line">  if darkmode.enable &amp;&amp; darkmode.button</span><br><span class="line">     button#darkmode(type=&quot;button&quot; title=_p(&#x27;rightside.night_mode_title&#x27;))</span><br><span class="line">       i.fas.fa-adjust</span><br></pre></td></tr></table></figure><p><strong>修改后</strong>：注意缩进，需要使用空格，而不是Tab</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">when &#x27;darkmode&#x27;</span><br><span class="line">  if darkmode.enable &amp;&amp; darkmode.button</span><br><span class="line">    a.icon-V.hidden(onclick=&#x27;switchNightMode()&#x27;,  title=_p(&#x27;rightside.night_mode_title&#x27;))</span><br><span class="line">      svg(width=&#x27;25&#x27;, height=&#x27;25&#x27;, viewBox=&#x27;0 0 1024 1024&#x27;)</span><br><span class="line">        use#modeicon(xlink:href=&#x27;#icon-moon&#x27;)</span><br></pre></td></tr></table></figure><h1>配置修改</h1><p>修改butterfly的配置文件：<code>themes\butterfly\_config.yml</code>，将 JS 引入其中：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/dark_mode.js&quot;</span> <span class="string">async&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h1>启动测试</h1><p>运行命令：<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly夜间模式 </tag>
            
            <tag> Hexo夜间模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>同时配置Github和Gitee的免密配置</title>
      <link href="/2025/08/24/%E5%A6%82%E4%BD%95%E5%90%8C%E6%97%B6%E9%85%8D%E7%BD%AEGithub%E5%92%8CGitee%E7%9A%84%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/"/>
      <url>/2025/08/24/%E5%A6%82%E4%BD%95%E5%90%8C%E6%97%B6%E9%85%8D%E7%BD%AEGithub%E5%92%8CGitee%E7%9A%84%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="清除-git-的全局设置">清除 git 的全局设置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看是否设置</span></span><br><span class="line">git config --global --list</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 删除设置</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> user.name</span><br><span class="line">git config --global --<span class="built_in">unset</span> user.email</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看配置来源(本地配置覆盖全局配置)</span></span><br><span class="line">git config --list --show-origin</span><br></pre></td></tr></table></figure><h2 id="Windows-系统配置">Windows 系统配置</h2><h3 id="配置多个-SSH-密钥"><strong>配置多个 SSH 密钥</strong></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为 GitHub 生成 SSH 密钥</span></span><br><span class="line">ssh-keygen -t rsa -f %USERPROFILE%/.ssh/id_rsa_github -C <span class="string">&quot;your_email@github.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 为 Gitee 生成 SSH 密钥</span></span><br><span class="line">ssh-keygen -t rsa -f %USERPROFILE%/.ssh/id_rsa_gitee -C <span class="string">&quot;your_email@gitee.com&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>完成后会在 <code>C:/Users/xxx/.ssh /</code> 目录下生成以下文件</p><ul class="lvl-1"><li class="lvl-2">id_rsa_github</li><li class="lvl-2">id_rsa_github.pub</li><li class="lvl-2">id_rsa_gitee</li><li class="lvl-2">id_rsa_gitee.pub</li></ul><p>将生成的对应pub秘钥拷贝到对应平台中</p><p>如：id_rsa_github.pub 中的全部内容，拷贝到github 的SSH配置中</p></blockquote><h3 id="配置-SSH-Config-文件">配置 SSH Config 文件</h3><p>在 <code>C:/Users/xxx/.ssh/config</code> 文件中添加以下内容，以区分不同平台的密钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># Gitee</span><br><span class="line">Host gitee.com</span><br><span class="line">HostName gitee.com</span><br><span class="line">User git</span><br><span class="line">IdentitiesOnly yes</span><br><span class="line">IdentityFile C:/Users/xxx/.ssh/id_rsa_gitee</span><br><span class="line"></span><br><span class="line"># GitHub</span><br><span class="line">Host github.com</span><br><span class="line">AddKeysToAgent yes</span><br><span class="line">IdentitiesOnly yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile C:/Users/xxx/.ssh/id_rsa_github</span><br><span class="line"></span><br><span class="line"># GitHub</span><br><span class="line">Host ssh.github.com</span><br><span class="line">AddKeysToAgent yes</span><br><span class="line">IdentitiesOnly yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">Port 443</span><br><span class="line">User git</span><br><span class="line">IdentityFile C:/Users/xxx/.ssh/id_rsa_github</span><br></pre></td></tr></table></figure><blockquote><p>验证是否生效（在任意路径）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现以下情况，表示成功，否则配置错误（IdentityFile需要绝对路径）：</p><p><code>Hi xxx! You've successfully authenticated, but GitHub does not provide shell access.</code></p></blockquote><h3 id="同时关联远程仓库">同时关联远程仓库</h3><p>在本地项目中，可以同时关联 Gitee 和 GitHub 的远程仓库：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加 GitHub 远程仓库</span></span><br><span class="line">git remote add github git@github.com:username/repo.git</span><br><span class="line"><span class="comment"># 推送到 GitHub</span></span><br><span class="line">git push github master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 Gitee 远程仓库</span></span><br><span class="line">git remote add gitee git@gitee.com:username/repo.git</span><br><span class="line"><span class="comment"># 推送到 Gitee</span></span><br><span class="line">git push gitee master</span><br></pre></td></tr></table></figure><h3 id="配置文件权限修改"><strong>配置文件权限修改</strong></h3><p>config 、id_rsa_github和 id_rsa_gitee 配置文件需要删除其他用户的权限，只保留管理员和当前用户</p><blockquote><ol><li class="lvl-3"><p>右键需配置的文件，查看属性，打开“安全”一栏</p></li><li class="lvl-3"><p>打开“高级” ，“禁用继承”</p></li><li class="lvl-3"><p>返回，在“安全”一栏的“组或用户名” 中，删除非当前用户和系统管理员的账号，如：Everyone<img src="/imgs/image-20250824120719000.png" alt="image-20250824120719000"></p></li></ol></blockquote><h2 id="Linux-系统配置">Linux 系统配置</h2><h3 id="配置多个-SSH-密钥-2">配置多个 SSH 密钥</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为 GitHub 生成 SSH 密钥</span></span><br><span class="line">ssh-keygen -t rsa -f ~/.ssh/id_rsa_github -C <span class="string">&quot;your_email@github.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 为 Gitee 生成 SSH 密钥</span></span><br><span class="line">ssh-keygen -t rsa -f ~/.ssh/id_rsa_gitee -C <span class="string">&quot;your_email@gitee.com&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>完成后会在~/.ssh / 目录下生成以下文件</p><ul class="lvl-1"><li class="lvl-2">id_rsa_github</li><li class="lvl-2">id_rsa_github.pub</li><li class="lvl-2">id_rsa_gitee</li><li class="lvl-2">id_rsa_gitee.pub</li></ul><p>将生成的对应pub秘钥拷贝到对应平台中</p><p>如：id_rsa_github.pub 中的全部内容，拷贝到github 的SSH配置中</p></blockquote><h3 id="配置-SSH-Config-文件-2">配置 SSH Config 文件</h3><p>在 <code>~/.ssh/config</code> 文件中添加以下内容，以区分不同平台的密钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># Gitee</span><br><span class="line">Host gitee.com</span><br><span class="line">HostName gitee.com</span><br><span class="line">User git</span><br><span class="line">IdentitiesOnly yes</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_gitee</span><br><span class="line"></span><br><span class="line"># GitHub</span><br><span class="line">Host github.com</span><br><span class="line">AddKeysToAgent yes</span><br><span class="line">IdentitiesOnly yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_github</span><br><span class="line"></span><br><span class="line"># GitHub</span><br><span class="line">Host ssh.github.com</span><br><span class="line">AddKeysToAgent yes</span><br><span class="line">IdentitiesOnly yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">Port 443</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_github</span><br></pre></td></tr></table></figure><blockquote><p>验证是否生效（在任意路径）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现以下情况，表示成功，否则配置错误（IdentityFile需要绝对路径）：</p><p><code>Hi xxx! You've successfully authenticated, but GitHub does not provide shell access.</code></p></blockquote><h3 id="同时关联远程仓库-2">同时关联远程仓库</h3><p>在本地项目中，可以同时关联 Gitee 和 GitHub 的远程仓库：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加 GitHub 远程仓库</span></span><br><span class="line">git remote add github git@github.com:username/repo.git</span><br><span class="line"><span class="comment"># 推送到 GitHub</span></span><br><span class="line">git push github master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 Gitee 远程仓库</span></span><br><span class="line">git remote add gitee git@gitee.com:username/repo.git</span><br><span class="line"><span class="comment"># 推送到 Gitee</span></span><br><span class="line">git push gitee master</span><br></pre></td></tr></table></figure><h3 id="配置文件权限修改-2"><strong>配置文件权限修改</strong></h3><p>config 、id_rsa_github和 id_rsa_gitee 配置文件需要删除其他用户的权限</p><p><code>chmod 644 ~/.ssh/config</code></p>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> gitee </tag>
            
            <tag> git-ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/08/23/hello-world/"/>
      <url>/2025/08/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
